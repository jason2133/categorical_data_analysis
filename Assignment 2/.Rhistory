install.packages("PropCIs")
install.packages("epitools")
install.packages("vcd")
install.packages("vcdExtra")
install.packages("DescTools")
###Analysis of MI data
prop.test(c(189, 104), c(11034, 11037), conf.level=0.95, correct=FALSE) #Wald test and CI for diff props(D)
library(epitools)
riskratio(c(10933, 104, 10845, 189), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
riskratio(c(104, 10933, 189, 10845), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
oddsratio(c(189, 10845, 104, 10933), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Odds Ratio(OR)
install.packages("PropCIs")
install.packages("epitools")
install.packages("vcd")
install.packages("epitools")
# Pearson Chi-Square Test
num1 <- matrix(c(21, 8, 2, 9), ncol = 2)
print(num1)
num1
library(DescTools)
GTest(GenderGap)  #Likelihood-ratio(LR) test
# Pearson Chi-Square Test
num1 <- matrix(c(21, 8, 2, 9), ncol = 2)
print(num1)
num1
library(DescTools)
GTest(num1)  #Likelihood-ratio(LR) test
install.packages("PropCIs")
install.packages("epitools")
install.packages("PropCIs")
install.packages("epitools")
install.packages("PropCIs")
install.packages("epitools")
install.packages("vcd")
install.packages("vcdExtra")
install.packages("DescTools")
# Num 1
num1 <- matrix(c(21, 8, 2, 9))
num1
# Num 1
num1 <- matrix(c(21, 8, 2, 9), col = 2)
num1
# Num 1
num1 <- matrix(c(21, 8, 2, 9), ncol = 2)
num1
chisq.test(num1) #Pearson's chi-square test
table23
# Print - Table 2.3
table23 <- matrix(c(189, 104, 10845, 10933), ncol = 2)
table23
chisq.test(table23) #Pearson's chi-square test
# Book - Table 2.5
table25 <- matrix(c(762, 484, 327, 239, 468, 477), ncol = 3)
table25
chisq.test(table25)
chisq.test(table25)
library(DescTools)
GTest(table25)  #Likelihood-ratio(LR) test
library(DescTools)
library(epitools)
library(PropCIs)
library(DescTools)
# Num 1
num1 <- matrix(c(21, 8, 2, 9), ncol = 2)
num1
chisq.test(num1) #Pearson's chi-square test
chisq.test(num1) #Pearson's chi-square test
GTest(num1)
chisq.test(num1) #Pearson's chi-square test
lrtest(num1)
chisq.test(num1) #Pearson's chi-square test
lr.test(num1)
chisq.test(num1) #Pearson's chi-square test
lr.test(matrix(c(21, 8, 2, 9), ncol = 2)
chisq.test(num1) #Pearson's chi-square test
lr.test(c(21, 8), c(2, 9))
###Analysis of tea data
tea <- matrix(c(3, 1, 1, 3), ncol=2)
tea
fisher.test(tea)                        #Fisher's exact test
fisher.test(tea, alternative="greater") #Fisher's exact test (one-sided)
###Analysis of tea data
fisher.test(num1)                        #Fisher's exact test
fisher.test(num1, alternative="greater") #Fisher's exact test (one-sided)
install.packages("PropCIs")
install.packages("epitools")
install.packages("vcd")
install.packages("vcdExtra")
install.packages("DescTools")
# Num 1
num1 <- matrix(c(21, 8, 2, 9), ncol = 2)
num1
riskratio(num1, method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
library(epitools)
riskratio(num1, method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
library(epitools)
riskratio(num1, method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
chisq.test(num1) #Pearson's chi-square test
library(PropCIs)
diffscoreci(num1, conf.level=0.95) #Score CI for D
riskscoreci(num1, conf.level=0.95) #Score CI for RR
orscoreci(num1, conf.level=0.95) #Score CI for OR
library(PropCIs)
diffscoreci(21, 8, 2, 9, conf.level=0.95) #Score CI for D
diffscoreci(21, 8, 2, 9, conf.level=0.95) #Score CI for D
riskscoreci(21, 8, 2, 9, conf.level=0.95) #Score CI for RR
diffscoreci(21, 8, 2, 9, conf.level=0.95) #Score CI for D
riskscoreci(21, 8, 2, 9, conf.level=0.95) #Score CI for RR
orscoreci(21, 8, 2, 9, conf.level=0.95) #Score CI for OR
diffscoreci(c(21, 8, 2, 9), conf.level=0.95) #Score CI for D
riskscoreci(c(21, 8, 2, 9), conf.level=0.95) #Score CI for RR
library(PropCIs)
diffscoreci(c(21, 8, 2, 9), conf.level=0.95) #Score CI for D
riskscoreci(c(21, 8, 2, 9), conf.level=0.95) #Score CI for RR
orscoreci(21, 8, 2, 9, conf.level=0.95) #Score CI for OR
library(PropCIs)
diffscoreci(189, 11034, 104, 11037, conf.level=0.95) #Score CI for D
riskscoreci(189, 11034, 104, 11037, conf.level=0.95) #Score CI for RR
orscoreci(189, 11034, 104, 11037, conf.level=0.95) #Score CI for OR
install.packages("PropCIs")
install.packages("vcd")
install.packages("vcdExtra")
install.packages("DescTools")
install.packages("PropCIs")
###Analysis of MI data
prop.test(c(189, 104), c(11034, 11037), conf.level=0.95, correct=FALSE) #Wald test and CI for diff props(D)
prop.test(num1, conf.level=0.95, correct=FALSE) #Wald test and CI for diff props(D)
c(1, 2, 3, 4)
a = (c(1, 2, 3, 4), ncol = 2)
a
a <- (c(1, 2, 3, 4), ncol = 2)
a
aaa <- (c(1, 2, 3, 4), ncol = 2)
aaa
aaa <- matrix(c(1, 2, 3, 4), ncol = 2)
aaa
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
riskratio(c(10933, 104, 10845, 189), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
riskratio(matrix(c(21, 8, 2, 9), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
riskratio(matrix(c(21, 8, 2, 9), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
riskratio(matrix(c(21, 8, 2, 9), method="wald", conf=0.95, correct=FALSE)) #Wald test and CI for Relative Risk(RR)
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
riskratio(matrix(c(21, 8, 2, 9)), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
riskratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
riskratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
riskratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
oddsratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Odds Ratio(OR)
# Num 1 - a - Odds Ratio (OR)
# OR and CI of OR
oddsratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Odds Ratio(OR)
# Num 1 - a - proportions(D)
# D and CI of D
prop.test(num1, conf.level=0.95, correct=FALSE) #Wald test and CI for diff props(D)
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
riskratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
riskratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
# Num 1 - a - Odds Ratio (OR)
# OR and CI of OR
oddsratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Odds Ratio(OR)
exp(2.8069)
# 과제 문제 1번 Num 1
num1 <- matrix(c(21, 8, 2, 9), ncol = 2)
num1
# Num 1 - a - proportions(D)
# D and CI of D
prop.test(num1, conf.level=0.95, correct=FALSE) #Wald test and CI for diff props(D)
# Num 1 - a - Relative Risk (RR)
# RR and CI of RR
library(epitools)
riskratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
riskratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Relative Risk(RR)
# Num 1 - a - Odds Ratio (OR)
# OR and CI of OR
oddsratio(matrix(c(21, 8, 2, 9), ncol=2), method="wald", conf=0.95, correct=FALSE) #Wald test and CI for Odds Ratio(OR)
